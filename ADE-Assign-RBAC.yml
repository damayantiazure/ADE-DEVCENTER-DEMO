# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

 

pool:
  vmImage: ubuntu-latest

variables:  
  
  AZURE_RESOURCE_GROUP: "dev-rg"
  LOCATION: "westeurope" 
  AZURE_KEYVAULT: "devcenterkv163084123"
  DCNAME: "dc-devbox020"
  AZURE_SUBSCRIPTION_ID: ""
  REPO: "https://dev.azure.com/damayantibhuyan/customerPOCs/_git/ade-demo"

steps:
- task: AzureCLI@2
  displayName: Create Key vault and assign RABAC
  inputs:
    azureSubscription: 'masterconnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |    
      
      
      #Get the deploying users id for RBAC assignments
      #DEPLOYINGUSERID=$(az ad signed-in-user show --query id -o tsv)
     
      DEPLOYINGUSERID='6e4c3017-00f7-440d-ac5c-695cf98dd060'
      AZURE_SUBSCRIPTION_ID=$(az account show --query id --output tsv)      
            
      # Assign ADE access on the subcription
      AZURE_DEVCENTER_PRINCIPAL_ID=$(az resource list -n $DCNAME --query [*].identity.principalId --out tsv)          
      az role assignment create \
        --scope /subscriptions/$AZURE_SUBSCRIPTION_ID \
        --role Owner \
        --assignee-object-id $AZURE_DEVCENTER_PRINCIPAL_ID \
        --assignee-principal-type ServicePrincipal

      # create a new key vault. You use this key vault later to save a personal access token from Devops/github.
      az keyvault create \
        --name $AZURE_KEYVAULT \
        --resource-group $AZURE_RESOURCE_GROUP \
        --location $LOCATION \
        --enable-rbac-authorization true

      # Give yourself the Key Vault Administrator role on the new key vault.      
      AZURE_KEYVAULT_ID="/subscriptions/$(AZURE_SUBSCRIPTION_ID)/resourceGroups/$(AZURE_RESOURCE_GROUP)/providers/Microsoft.KeyVault/vaults/$(AZURE_KEYVAULT)"  
      az role assignment create \
        --scope $AZURE_KEYVAULT_ID \
        --role "Key Vault Administrator" \
        --assignee-object-id $DEPLOYINGUSERID \
        --assignee-principal-type ServicePrincipal

      # Assign the dev center's identity the role of Key Vault Secrets User.  
      az role assignment create \
        --scope $AZURE_KEYVAULT_ID \
        --role "Key Vault Secrets User" \
        --assignee-object-id $AZURE_DEVCENTER_PRINCIPAL_ID \
        --assignee-principal-type ServicePrincipal  

      # personal access token as a key vault secret named pat
      az keyvault secret set --name pat --value $adopat --vault-name $AZURE_KEYVAULT
      

      #Add the catalog to your dev center  
      az devcenter admin catalog create \
        --name Environments \
        --resource-group $AZURE_RESOURCE_GROUP \
        --dev-center $DCNAME\
        --ado-git path="/Environments" branch="main" secret-identifier="https://$(AZURE_KEYVAULT).vault.azure.net/secrets/pat" uri=$REPO   
  
