# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
   include:
     - master
  paths:
    include:
      - 'infrastructure-templates/**/*.bicep'
#- main
pool:
  vmImage: ubuntu-latest
  

variables:
  #- group: ade-variables
  AZURE_RESOURCE_GROUP: "my-dev-center-rg"
  AZURE_LOCATION: "westeurope"
  AZURE_ADE_CATALOG_NAME: "catalogfrontend"
  AZURE_ADE_NAME: "abndevcenter-dev-center"

stages:
- stage: ADE
  jobs:
  - job: GenerateARM  
      
    steps:
    - task: PythonScript@0
      inputs:
        scriptSource: 'inline'
        script: |
          import os
          import shutil
          import subprocess
                    
          git = shutil.which('git')
          az = shutil.which('az')
                    
          from pathlib import Path
          templates_path = Path.cwd() / 'Environments/StaticWeb'
          modules = []
                    
          print('Compiling bicep files...')          
          for dirpath, dirnames, files in os.walk(templates_path):              
            if not templates_path.samefile(dirpath) and Path(dirpath).parent.samefile(templates_path):
                modules.append(Path(dirpath))
                    
          for moduleSpec in modules:
              print(f'Check if exists: {moduleSpec}/azuredeploy.json')
              if not (moduleSpec / 'azuredeploy.json').exists():                  
                  (moduleSpec / 'azuredeploy.json').touch()                  
                  subprocess.run([git, 'add', moduleSpec / 'azuredeploy.json'])
                    
          for moduleSpec in modules:
              print(f'Compiling Bicep: {moduleSpec}')              
              subprocess.run([az, 'bicep', 'build', '--file', moduleSpec / 'main.bicep', '--outfile', moduleSpec / 'azuredeploy.json'])
          print('Generated ARM templates')

  - job: committorepo
    dependsOn: GenerateARM    
    steps:
             
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          git checkout -b main
          git config --global user.name $(Build.RequestedFor)
          git config --global user.email $(Build.RequestedForEMail)
          git commit -am "Generated ARM templates"
          git push https://$(System.AccessToken)@dev.azure.com/damayantibhuyan/customerPOCs/_git/ade-demo 

# - stage: SyncADECatalog
#   jobs:
#   - job: SyncADECatalog
#     steps:
#     - task: AzureCLI@2
#       inputs:
#         azureSubscription: 'masterconnection'
#         scriptType: 'bash'
#         scriptLocation: 'inlineScript'
#         inlineScript: |
#           az extension add --name devcenter
#           az devcenter admin catalog sync --name $(AZURE_ADE_CATALOG_NAME) --dev-center-name $(AZURE_ADE_NAME) --resource-group $(AZURE_RESOURCE_GROUP)
    
